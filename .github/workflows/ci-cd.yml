name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  go-build:
    if: ${{ contains(github.event.head_commit.message, '[skip ci]') == false }}
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Get Dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...
        env:
          GOOS: linux
          GOARCH: arm64

      - name: Run Tests
        run: go test

  docker-build-push:
    runs-on: self-hosted
    needs: go-build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: kubernetes

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: self-hosted
    needs: docker-build-push
    permissions:
      id-token: write
      actions: read
      contents: read
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      K8S_NAMESPACE: go-deployment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Set K8s context
        uses: azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Set kubectl
        uses: azure/setup-kubectl@v4
        id: install
        with:
          version: 'v1.29.9'

      - name: Deploy application
        uses: azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: k8s
          pull-images: false
          namespace: ${{ env.K8S_NAMESPACE }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
